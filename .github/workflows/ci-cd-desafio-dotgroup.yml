name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE: marcorassak/desafio_dotgroup
  DOCKERFILE_PATH: docker/Dockerfile

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          push: false
          load: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  scan:
    name: Scan vulnerabilities
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run Trivy (SARIF)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif
          severity: CRITICAL,HIGH
      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif
      - name: Run Trivy (table)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          format: table
          severity: CRITICAL,HIGH
          exit-code: 1

  push:
    name: Push Docker image
    runs-on: ubuntu-latest
    needs: [build, scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=sha,format=short
            type=raw,value=latest
            type=datetime,format=YYYYMMDD-HHmmss


      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Mensagem de sucesso
        run: |
          echo "Imagem enviada com sucesso: ${{ steps.meta.outputs.tags }}"
